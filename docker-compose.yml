services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - app-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - app-network
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:14.1-alpine
    networks:
      - app-network
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=users
    volumes:
      - postgres-db:/var/lib/postgresql/data

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "4004:4004"
    networks:
      - app-network
    depends_on:
      - auth-service
      - employee-service

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "4005:4005"
    networks:
      - app-network
    depends_on:
      - postgres

  employee-service:
    build:
      context: ./employee-service
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    networks:
      - app-network
    depends_on:
      - postgres
      - kafka

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    networks:
      - app-network
    depends_on:
      - kafka

  prometheus:
    image: prom/prometheus:v2.54.1
    ports:
      - "9090:9090"
    networks:
      - app-network
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:11.1.0
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - grafana-storage:/var/lib/grafana

networks:
  app-network:
    driver: bridge

volumes:
  postgres-db:
  grafana-storage:
